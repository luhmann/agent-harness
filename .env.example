# AI Agent Harness - Environment Configuration
#
# Copy this file to .env and customize as needed:
#   cp .env.example .env
#
# Note: The .env file should not be committed to version control

# ============================================================================
# Resource Limits
# ============================================================================

# Maximum memory the container can use
# Examples: 2g, 4g, 8g, 512m
# Default: 4g
MEMORY_LIMIT=4g

# Maximum CPU cores the container can use
# Examples: 1.0, 2.0, 4.0
# Default: 2.0
CPU_LIMIT=2.0

# ============================================================================
# Project Configuration
# ============================================================================

# Default project name when no project is specified
# Default: sandbox
PROJECT_NAME=sandbox

# ============================================================================
# Agent Selection (Optional)
# ============================================================================

# Default agent when bypassing interactive menu
# Options: claude, codex
# Default: (shows menu)
# DEFAULT_AGENT=claude

# ============================================================================
# Host Authentication (Optional)
# ============================================================================

# Path to host Claude Code directory for authentication copy
# If set, the container will try to copy authentication from this directory
# on first run (hybrid authentication strategy)
#
# Default (macOS/Linux): $HOME/.claude
# Windows: C:\Users\<username>\.claude
#
# Leave commented to auto-detect, or specify custom path:
# HOST_CLAUDE_DIR=/path/to/your/.claude

# Path to host Codex CLI directory for authentication copy
# Similar hybrid strategy as Claude Code
#
# Default (macOS/Linux): $HOME/.codex
# Windows: C:\Users\<username>\.codex
#
# Leave commented to auto-detect, or specify custom path:
# HOST_CODEX_DIR=/path/to/your/.codex

# ============================================================================
# Advanced Configuration (Optional)
# ============================================================================

# Mise data directory inside container
# Default: /home/claudedev/.local/share/mise
# MISE_DATA_DIR=/home/claudedev/.local/share/mise

# Mise cache directory inside container
# Default: /home/claudedev/.local/share/mise/cache
# MISE_CACHE_DIR=/home/claudedev/.local/share/mise/cache

# Claude Code config directory inside container
# Default: /home/claudedev/.claude
# CLAUDE_CONFIG_DIR=/home/claudedev/.claude

# Codex CLI config directory inside container
# Default: /home/claudedev/.codex
# CODEX_CONFIG_DIR=/home/claudedev/.codex

# Codex CLI approval mode
# Options: read-only, auto, full-access
# Default: full-access (yolo mode)
# CODEX_APPROVAL_MODE=full-access

# ============================================================================
# Docker Compose Settings
# ============================================================================

# Compose project name (used for volume naming)
# Default: agent-harness-claude
# COMPOSE_PROJECT_NAME=agent-harness-claude

# ============================================================================
# Notes
# ============================================================================
#
# 1. After modifying .env, restart the container for changes to take effect:
#    ./scripts/cleanup.sh
#    ./scripts/run-agent.sh
#
# 2. Resource limits prevent the container from consuming all system resources
#
# 3. Authentication is stored in Docker volumes and persists across restarts:
#    - Claude Code: claude-config volume
#    - Codex CLI: codex-config volume
#
# 4. For security, never commit .env files to version control
#
# 5. Both agents (Claude Code & Codex CLI) run in yolo/full-access mode
#    within the sandboxed container for autonomous operation
